##################################################################################################################
#
# NOTICE：
#
# 系统配置文件，所有列出的项是系统所支持全部配置项
# 如果要覆盖某项的值可以添加到mpush.conf中。
#
# 配置文件格式采用HOCON格式。解析库由https://github.com/typesafehub/config提供。
# 具体可参照器说明文档，比如含有特殊字符的字符串必须用双引号包起来。
#
##################################################################################################################

mp {
    #基础配置
    home=${user.dir} //程序工作目前

    #日志配置
    log-level=warn
    log-dir=${mp.home}/logs
    log-conf-path=${mp.home}/conf/logback.xml

    #核心配置
    core {
        max-packet-size=10k //系统允许传输的最大包的大小
        compress-threshold=10k //数据包启用压缩的临界值，超过该值后对数据进行压缩
        min-heartbeat=2m //最小心跳间隔
        max-heartbeat=2m //最大心跳间隔
        max-hb-timeout-times=1 //允许的心跳连续超时的最大次数
        session-expired-time=1d //用于快速重连的session 过期时间默认1天
        epoll-provider=netty //nio:jdk自带，netty:由netty实现
    }

    #安全配置
    security {
        #rsa 私钥、公钥key长度为1024;可以使用脚本bin/rsa.sh生成, @see com.mpush.tools.crypto.RSAUtils#main
        private-key="MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAMP0FHzW3iJY9Qurnu2v8p7tAEGEe4DVV2DJbA81BDGv1FE/9a/SY1hqBxTf0krQ3jtEVcVYFNiu+jNJ81+D0Y/DSLJBpD3wl/zBzcLu9ztJ0/1+DcgEsGFyrPL1IUE3eL66BpQV9hd49I2nJc/VXuV3mIDXxeoSWLx4OzpWuj8pAgMBAAECgYEAjsGGH4DmKf3G4C6yxRTW2+NruU+MLkq+sptrZxTHrm8bben70pCioan06Mc6zBionmLlXbUS0t1/F9h7Po2pIB3JMa7HPsF2PSS1624fkJwYTdoyjt/o2tFfHKFRcAZI42awwSoggGO+gRoBU1ZzWL/7wEkFR/HCFK2vyjiAZcUCQQDk0AhGvdTYqdJmzHG5r9pX1bNkct/6Z7fG/BBqJyXjbFiGJDibVG+8Aq4xmu4HJoaUa0i3VjrUgWRuucTDPQHTAkEA2zyLdfRDOXqwqffikRg5Ej6/4AGZ1eZ75qZe0niZ1idGO39Fj4BfJKHZPJkDk1KDiJ5C0cO/T4u37duPTPIhkwJBALRxhoVbQRaYXi/pfKomDzeDdNR7bzzHPHv03nEIbG28TNeEiwub+/2102+VMa9751f2f0LuArkBTZWwdIZPfzcCQCgISzLzsl7Jj37J295AvRMe0CyYPj33w0IfuQrXqMeZDlMI72u/th/bSe6txiBdndURiQQCqWleCuzs/aLAR+8CQQC86FBPYKLCReSio/LVXd17yaAsSiCbq5xP2mkdm6vUSHPTPN4BmMUIPO6ZS33ruP0RkksNdZMFB1LGpP9Vq3lO"
        public-key="MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDD9BR81t4iWPULq57tr/Ke7QBBhHuA1VdgyWwPNQQxr9RRP/Wv0mNYagcU39JK0N47RFXFWBTYrvozSfNfg9GPw0iyQaQ98Jf8wc3C7vc7SdP9fg3IBLBhcqzy9SFBN3i+ugaUFfYXePSNpyXP1V7ld5iA18XqEli8eDs6Vro/KQIDAQAB"

        aes-key-length=16 //AES key 长度
    }

    #网络配置
    net {
        local-ip=""  //本地ip, 默认取第一个网卡
        public-ip="" //外网ip, 默认取第一个网卡

        connect-server-bind-ip=""  //connSrv 绑定的本地ip (默认anyLocalAddress 0.0.0.0 or ::0)
        connect-server-register-ip=${mp.net.public-ip}  //公网ip, 注册到zk中的ip, 默认是public-ip
        connect-server-port=3000 //长链接服务对外端口, 公网端口
        connect-server-register-attr { //注册到zk里的额外属性，比如配置权重，可在alloc里排序
            weight:1
        }

        gateway-server-bind-ip=""  //gatewaySrv 绑定的本地ip (默认anyLocalAddress 0.0.0.0 or ::0)
        gateway-server-register-ip=${mp.net.local-ip}  //本地ip, 注册到zk中的ip, 默认是local-ip
        gateway-server-port=3001 //网关服务端口, 内部端口
        gateway-server-net=tcp //网关服务使用的网络类型tcp/udp/sctp/udt

        gateway-client-port=4000 //UDP 客户端端口
        gateway-server-multicast="239.239.239.88" //239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效
        gateway-client-multicast="239.239.239.99" //239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效
        gateway-client-num=1 //网关客户端连接数

        admin-server-port=3002 //控制台服务端口, 内部端口
        ws-server-port=0 //websocket对外端口, 公网端口, 0表示禁用websocket
        ws-path="/" //websocket path

        public-host-mapping { //本机局域网IP和公网IP的映射关系, 该配置后续会被废弃
            //"10.0.10.156":"111.1.32.137"
            //"10.0.10.166":"111.1.33.138"
        }

        snd_buf { //tcp/udp 发送缓冲区大小
            connect-server=32k
            gateway-server=0
            gateway-client=0 //0表示使用操作系统默认值
        }

        rcv_buf { //tcp/udp 接收缓冲区大小
            connect-server=32k
            gateway-server=0
            gateway-client=0 //0表示使用操作系统默认值
        }

        write-buffer-water-mark { //netty 写保护
            connect-server-low=32k
            connect-server-high=64k
            gateway-server-low=10m
            gateway-server-high=20m
        }

        traffic-shaping { //流量整形配置
            gateway-client {
                enabled:false
                check-interval:100ms
                write-global-limit:30k
                read-global-limit:0
                write-channel-limit:3k
                read-channel-limit:0
            }

            gateway-server {
                enabled:false
                check-interval:100ms
                write-global-limit:0
                read-global-limit:30k
                write-channel-limit:0
                read-channel-limit:3k
            }

            connect-server {
                enabled:false
                check-interval:100ms
                write-global-limit:0
                read-global-limit:100k
                write-channel-limit:3k
                read-channel-limit:3k
            }
        }
    }

    #Zookeeper配置
    zk {
        server-address="127.0.0.1:2181"
        namespace=mpush
        digest=mpush //zkCli.sh acl 命令 addauth digest mpush
        watch-path=/
        retry {
            #initial amount of time to wait between retries
            baseSleepTimeMs=3s
            #max number of times to retry
            maxRetries=3
            #max time in ms to sleep on each retry
            maxSleepMs=5s
        }
        connectionTimeoutMs=5s
        sessionTimeoutMs=5s
    }

    #Redis集群配置
    redis {
        cluster-model=single//single,cluster,sentinel
        password=""//your password
        nodes:[]//["127.0.0.1:6379"]格式ip:port:password,密码可以不设置ip:port
        sentinel-master:""
        config {
            maxTotal:8,
            maxIdle:4,
            minIdle:1,
            lifo:true,
            fairness:false,
            maxWaitMillis:5000,
            minEvictableIdleTimeMillis:300000,
            softMinEvictableIdleTimeMillis:1800000,
            numTestsPerEvictionRun:3,
            testOnCreate:false,
            testOnBorrow:false,
            testOnReturn:false,
            testWhileIdle:false,
            timeBetweenEvictionRunsMillis:60000,
            blockWhenExhausted:true,
            jmxEnabled:false,
            jmxNamePrefix:pool,
            jmxNameBase:pool
        }
    }

    #HTTP代理配置
    http {
        proxy-enabled=false //启用Http代理
        max-conn-per-host=5 //每个域名的最大链接数, 建议web服务nginx超时时间设长一点, 以便保持长链接
        default-read-timeout=10s //请求超时时间
        max-content-length=5m //response body 最大大小
        dns-mapping { //域名映射外网地址转内部IP, 域名部分不包含端口号
            //"mpush.com":["127.0.0.1:8080", "127.0.0.1:8081"]
        }
    }

    #线程池配置
    thread {
        pool {
            conn-work:0 //接入服务线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)
            gateway-server-work:0 //网关服务线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)
            http-work:0 //http proxy netty client work pool size，0表示线程数根据cpu核数动态调整(2*cpu)
            ack-timer:1 //处理ACK消息超时
            push-task:0 //消息推送中心，推送任务线程池大小, 如果为0表示使用Gateway Server的work线程池，tcp下推荐0
            gateway-client-work:0 //网关客户端线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)，该线程池在客户端运行
            push-client:2 //消息推送回调处理，该线程池在客户端运行

            event-bus { //用户处理内部事件分发
                min:1
                max:16
                queue-size:10000 //大量的online，offline，
            }

            mq { //用户上下线消息, 踢人等
                min:1
                max:4
                queue-size:10000
            }
        }
    }

    #推送消息流控
    push {
       flow-control { //qps = limit/(duration)
            global:{ //针对非广播推送的流控，全局有效
                limit:5000 //qps = 5000
                max:0 //UN limit
                duration:1s //1s
            }

            broadcast:{ //针对广播消息的流控，单次任务有效
                limit:3000 //qps = 3000
                max:100000 //10w
                duration:1s //1s
            }
       }
    }

    #系统监控配置
    monitor {
        dump-dir=${mp.home}/tmp
        dump-stack=false //是否定时dump堆栈
        dump-period=1m  //多久监控一次
        print-log=true //是否打印监控日志
        profile-enabled=false //开启性能监控
        profile-slowly-duration=10ms //耗时超过10ms打印日志
    }

    #SPI扩展配置
    spi {
        thread-pool-factory:"com.mpush.tools.thread.pool.DefaultThreadPoolFactory"
        dns-mapping-manager:"com.mpush.common.net.HttpProxyDnsMappingManager"
    }

    #mysql
    mysql{
        username=army
        password="army@123"
        dbname=army_unicom
        driver=com.mysql.jdbc.Driver
        url="jdbc:mysql://192.168.80.32:3306/"
        tablelen=100
    }
    #druid
    druid{
        driverClassName="com.mysql.jdbc.Driver"
        url="jdbc:mysql://192.168.80.32:3306/army_unicom?characterEncoding=utf-8"
        username="army"
        password="army@123"
        maxActive=30
    }

}